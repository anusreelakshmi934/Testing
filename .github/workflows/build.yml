name: PR notification
on:
  push : 
jobs:
  fetch_all_pull_request_shas:
    runs-on: ubuntu-latest
    outputs:
      pr_details: ${{ steps.extract.outputs.pr_details }}
    env:
      API_URL: https://api.github.com/repos/redhat-developer/lsp4ij/pulls
    steps:
      - name: Extract PR numbers and merge commit shas
        id: extract
        run: |
          pr_infos=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "${{ env.API_URL }}")

          # Extract PR numbers and merge_commit_sha values, excluding draft pull requests
          pr_details=$(echo "$pr_infos" | jq -r '.[] | select(.draft == false) | {number: .number, sha: .merge_commit_sha}')

          # Print the PR number and corresponding merge commit sha
          echo "PR number and merge commit sha:"
          echo "$pr_details" | jq -r '. | "PR #\(.number): \(.sha)"'

          # Create a JSON array string of PR numbers and SHAs
          pr_details=$(echo "$pr_details" | jq -nc '[inputs | {number: .number, sha: .sha}]')
          echo "pr_details=$pr_details" >> $GITHUB_ENV

      - name: Check mergeable state for each PR
        id: check_mergeable_state
        run: |
          # Parse PR details from the previous step
          pr_details=$(cat $GITHUB_ENV | jq -r '.pr_details')

          # Loop through each PR and check mergeable state
          for pr in $(echo "$pr_details" | jq -r '.[] | @base64'); do
            _jq() {
              echo ${pr} | base64 --decode | jq -r ${1}
            }

            pr_number=$(_jq '.number')
            pr_sha=$(_jq '.sha')

            # Fetch detailed PR information including mergeable state
            pr_info=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/redhat-developer/lsp4ij/pulls/${pr_number}")

            mergeable_state=$(echo "$pr_info" | jq -r '.mergeable_state')

            # Check if mergeable state is dirty
            if [ "$mergeable_state" == "dirty" ]; then
              echo "Warning: PR #$pr_number has merge conflicts (mergeable_state: dirty)"
              # Optionally, you can handle or log this warning as needed
            fi
          }

